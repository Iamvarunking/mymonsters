{"version":3,"sources":["components/cart/cart.component.jsx","components/cart-list/cart-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cart","props","className","alt","src","monster","id","name","email","CartList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC1B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHTC,EAAW,SAAAR,GAAK,OAC7B,qBAAKC,UAAU,YAAf,SAA4BD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCDhEM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACzB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0BKG,E,kDA9Bb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZxC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAY,IAJC,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAKhC,IAAD,EACyBC,KAAKN,MAA7Bb,EADD,EACCA,SAASU,EADV,EACUA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OAAS,sBAAK9B,UAAU,MAAf,UACP,kDACE,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA1BRI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b422407.chunk.js","sourcesContent":["import React from 'react';\r\nimport './cart.styles.css';\r\n\r\nexport const Cart = props => (\r\n    <div className='cart-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n       \r\n)","import React from 'react';\r\nimport './cart-list.styles.css';\r\nimport {Cart} from'../cart/cart.component';\r\n\r\nexport const CartList = props => (   \r\n<div className='cart-list'>{props.monsters.map(monster => <Cart key={monster.id} monster={monster}/>\r\n)}\r\n</div>\r\n)","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>(\r\n<input \r\nclassName='search'\r\ntype='search'\r\nplaceholder={placeholder}\r\nonChange={handleChange}\r\n/>\r\n)","import React , {Component} from 'react';\nimport './App.css';\nimport {CartList} from './components/cart-list/cart-list.component';\nimport {SearchBox} from './components/search-box/search-box.component' ; \nclass App extends Component{\n  constructor(){\n    super();\nthis.state = {\n  monsters:[],\n  searchField:''\n}\n\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}) )\n  }\n  handleChange = e => {\n    this.setState({searchField:e.target.value})\n  }\n  render(){\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return(  <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n        <SearchBox \n        placeholder=\"Search Monsters\" \n        handleChange={this.handleChange}\n        />\n      <CartList monsters={filteredMonsters} />\n  </div>);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}